eureka:
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:9001/eureka
  instance:
    instance-id: ${spring.application.name}:${instanceId:${random.value}}
    prefer-ip-address: true
server:
  port: 0
spring:
  application:
    name: filter
  data:
    mongodb:
      database: rentalcarmongodb
      host: localhost
      port: 27017
  kafka:
      consumer:
          auto-offset-reset: earliest
          bootstrap-servers: localhost:9092
          group-id: filter
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          properties:
              spring:
                  json:
                      trusted:
                          packages: '*'
          value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      topic:
          name: rental_topics4
management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    export:
      prometheus:
        enabled: true
